{
  "name": "ink-on-polkadot-erc20",
  "version": "1.0.0",
  "description": "An example ERC-20 template using the ink! smart contract programming language.",
  "main": "index.js",
  "keywords": [],
  "author": "Sam Ruberti <sam.ruberti@parity.io>",
  "license": "Apache 2.0",
  "scripts": {
    "format": "rome format . --write",
    "lint": "rome check ./*",
    "lint:fix": "pnpm lint --apply-unsafe",
    "contract:build": "[ -f contracts/target/ink/erc20.contract ] || cargo contract build --verifiable --manifest-path=contracts/Cargo.toml",
    "contract:upload": "wait-on -c wait-on-node.js http://localhost:9944 && pnpm run contract:build && cargo contract upload --suri //Alice --execute --manifest-path=contracts/Cargo.toml",
    "contract:test": "cargo test --manifest-path=contracts/Cargo.toml",
    "contract:e2e-test": "CONTRACTS_NODE=$(realpath ./substrate-contracts-node) cargo test --features e2e-tests --manifest-path=contracts/Cargo.toml",
    "contract:clean": "cargo clean --manifest-path=contracts/Cargo.toml",
    "build:ui": "pnpm --filter ui build",
    "frontend:dev": "pnpm --filter ui dev & pnpm --filter erc20 dev",
    "node:start": "./substrate-contracts-node --finalize-delay-sec 1",
    "dev": "pnpm run contract:build && concurrently 'pnpm run node:start' 'pnpm run contract:upload && pnpm run frontend:dev'",
    "testnet:dev": "pnpm run frontend:dev"
  },
  "packages": [
    "ui",
    "*/frontend"
  ],
  "dependencies": {
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "useink": "^1.13.0"
  },
  "devDependencies": {
    "tailwindcss": "^3.3.2",
    "classnames": "^2.3.2",
    "concurrently": "^8.2.0",
    "autoprefixer": "^10.4.14",
    "postcss": "^8.4.24",
    "rome": "12.1.3",
    "wait-on": "^7.1.0"
  },
  "packageManager": "pnpm@8.4.0"
}
